##PROJECT PIZZA SALES ANALYSIS

USE PIZZASALES;

SHOW TABLES;

SELECT * FROM ORDERSDETAILS;
SELECT * FROM ORDERS;
SELECT * FROM PIZZA_TYPES;
SELECT * FROM pizzas;

select COUNT(ORDER_ID)
FROM ORDERSDETAILS;

SELECT SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE) AS TOTAL_REVENUE
FROM ORDERSDETAILS 
JOIN
PIZZAS 
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID;

SELECT MAX(PRICE)
FROM PIZZAS;

SELECT PIZZAS.SIZE,COUNT(*) AS TOTALORDERS
FROM ORDERSDETAILS
JOIN
pizzas
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZAS.SIZE
ORDER BY TOTALORDERS DESC
LIMIT 1;

SELECT PIZZA_TYPES.NAME,SUM(ORDERSDETAILS.QUANTITY) AS TOTAL_QUANTITY
FROM ORDERSDETAILS
JOIN
pizzas
ON ORDERSDETAILS.PIZZA_ID = pizzas.PIZZA_ID
JOIN
PIZZA_TYPES
ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY  PIZZA_TYPES.NAME
ORDER BY TOTAL_QUANTITY DESC
LIMIT 5;

SELECT PIZZA_TYPES.CATEGORY,SUM(ORDERSDETAILS.QUANTITY) AS TOTAL_QUANTITY
FROM ORDERSDETAILS
JOIN
PIZZAS
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN
PIZZA_TYPES
ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.CATEGORY;

SELECT  HOUR(TIME),COUNT(date) AS TOTAL_ORDERS
FROM ORDERS
group by HOUR(TIME)
ORDER BY TOTAL_ORDERS DESC;

SELECT 
    PIZZA_TYPES.CATEGORY, COUNT(PIZZA_ID) AS TOTAL_PIZZAS
FROM
    PIZZAS
        JOIN
    PIZZA_TYPES ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.CATEGORY
ORDER BY TOTAL_PIZZAS DESC;

SELECT ORDERS.DATE,AVG(QUANTITY) AS AVG_PIZZAS
FROM ORDERS
JOIN
ORDERSDETAILS
ON ORDERS.ORDER_ID = ORDERSDETAILS.ORDER_ID
GROUP BY ORDERS.DATE
ORDER BY AVG_PIZZAS DESC;

SELECT PIZZA_TYPES.NAME,SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE) AS TOTAL_REVENUE
FROM ORDERSDETAILS
JOIN
PIZZAS
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN
PIZZA_TYPES
ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.NAME	
ORDER BY  TOTAL_REVENUE DESC
LIMIT 3 ;

	SELECT PIZZA_TYPES.NAME,SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE) AS TOTAL_REVENUE,
	SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE)*100/
	(SELECT SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE)
	FROM ORDERSDETAILS
	JOIN
	pizzas
	ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID ) AS PERCENTAGE
	FROM ORDERSDETAILS
    JOIN
	pizzas
	ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
	JOIN
	PIZZA_TYPES
	ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
	GROUP BY PIZZA_TYPES.NAME
	ORDER BY TOTAL_REVENUE DESC;
    
    
SELECT ORDERS.TIME,SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE) AS REVENUE,
SUM(SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE)) OVER (ORDER BY ORDERS.TIME) AS CUMULATIVE_REVENUE
FROM ORDERSDETAILS
JOIN
ORDERS
ON ORDERSDETAILS.ORDER_ID = ORDERS.ORDER_ID
JOIN
pizzas
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY ORDERS.TIME
ORDER BY REVENUE ASC;

SELECT PIZZA_TYPES.NAME,CATEGORY,SUM(ORDERSDETAILS.QUANTITY*PIZZAS.PRICE) AS TOTAL_REVENUE
FROM ORDERSDETAILS
JOIN
PIZZAS
ON ORDERSDETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN
PIZZA_TYPES
ON PIZZAS.PIZZA_TYPE_ID = PIZZA_TYPES.PIZZA_TYPE_ID
GROUP BY PIZZA_TYPES.NAME,CATEGORY
ORDER BY  TOTAL_REVENUE DESC
LIMIT 3;

SELECT *
FROM (
  SELECT 
    pizza_types.category,
    pizza_types.name AS pizza_type,
    SUM(ordersdetails.quantity * pizzas.price) AS total_revenue,
    ROW_NUMBER() OVER (
      PARTITION BY pizza_types.category
      ORDER BY SUM(ordersdetails.quantity * pizzas.price) DESC
    ) AS Rank_
  FROM ordersdetails
  JOIN pizzas ON ordersdetails.pizza_id = pizzas.pizza_id
  JOIN pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
  GROUP BY pizza_types.category, pizza_types.name
) AS ranked_pizzas
WHERE rank_ <= 3
ORDER BY category, total_revenue DESC;
